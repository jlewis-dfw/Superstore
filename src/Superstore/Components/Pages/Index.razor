@page "/"
@using Superstore.Models
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Notifications
@inject NavigationManager NavigationManager
@inject IDashboardService DashboardService
@inject ILogger<Controls.SuperstoreDropdown> logger
@inject ILogger<Index> logger



<SfToast ID="toast_default" @ref="ToastObj" Title="Filter Error" Content="@ToastContent" Timeout="5000" Icon="e-error toast-icons" CssClass="e-toast-danger">
        <ToastPosition X="Right"></ToastPosition>
    </SfToast>

<div class="container-fluid">
	<SfDashboardLayout @ref="dashboardObject" Columns="12" CellSpacing="@Spacing" CellAspectRatio="@Ratio">
		<DashboardLayoutPanels>
			<DashboardLayoutPanel Column="0" Row="0" SizeX="6" SizeY="1">
					<HeaderTemplate>
						<span class="title">Filters</span>
					</HeaderTemplate>
				<ContentTemplate>
					<div class="container">
						<div class="row">
						<div class="col col-9"
							
								<label>Seasons</label>
								<SfMultiSelect TValue="string[]" TItem="StandardLookup" Mode="@VisualMode.Box" DataSource="@Dashboard.StandardLookupDataSet.Seasons" EnableSelectionOrder="true" @bind-Value="@Dashboard.Filters.SeasonsFilter">
									<MultiSelectFieldSettings Text="Name" Value="Id"></MultiSelectFieldSettings>
									<MultiSelectEvents TItem="StandardLookup" TValue="string[]"></MultiSelectEvents>
								</SfMultiSelect>

								<label>Regions</label>
								<SfMultiSelect TValue="string[]" TItem="StandardLookup" Mode="@VisualMode.Box" DataSource="@Dashboard.StandardLookupDataSet.Regions" EnableSelectionOrder="true" @bind-Value="@Dashboard.Filters.RegionsFilter">
									<MultiSelectFieldSettings Text="Name" Value="Id"></MultiSelectFieldSettings>
									<MultiSelectEvents TItem="StandardLookup" TValue="string[]"></MultiSelectEvents>
								</SfMultiSelect>

								<label>Categories</label>
								<SfMultiSelect TValue="string[]" TItem="StandardLookup" Mode="@VisualMode.Box" DataSource="@Dashboard.StandardLookupDataSet.Categories" EnableSelectionOrder="true" @bind-Value="@Dashboard.Filters.CategoriesFilter">
									<MultiSelectFieldSettings Text="Name" Value="Id"></MultiSelectFieldSettings>
									<MultiSelectEvents TItem="StandardLookup" TValue="string[]"></MultiSelectEvents>
								</SfMultiSelect>
							</div>

						<div class="col-3"
							<div class="row pb-3">
								<button class="btn btn-primary" @onclick="FilterData"> Filter Data </button>
								</div>
								<div class="row">
								<button class="btn btn-secondary" @onclick="ResetData"> Reset </button>
								</div>
								</div>
							</div>
						</div>


      

				</ContentTemplate>
			</DashboardLayoutPanel>
			<DashboardLayoutPanel Column="6" Row="0" SizeX="6" SizeY="1">
				<HeaderTemplate>
					<span class="title">Summary</span>
				</HeaderTemplate>
				<ContentTemplate>
					<h4>Sales: @Dashboard.StoreSummary.TotalSales</h4>
					<h4>Profit: @Dashboard.StoreSummary.TotalProfit</h4>
					<h4>Items Shipped: @Dashboard.StoreSummary.TotalItemsShipped</h4>
					<h4>Customers: @Dashboard.StoreSummary.UniqueCustomers</h4>
				</ContentTemplate>
			</DashboardLayoutPanel>

			<DashboardLayoutPanel Column="0" Row="1" SizeX="4" SizeY="3">
				<HeaderTemplate>
					<span class="title">Sales By Season</span>
				</HeaderTemplate>
				<ContentTemplate>
					<Superstore.Components.Charts.SuperstorePie PieChart="@Dashboard.PieChartSalesBySeason"></Superstore.Components.Charts.SuperstorePie>
				</ContentTemplate>
			</DashboardLayoutPanel>


			<DashboardLayoutPanel Column="4" Row="1" SizeX="4" SizeY="3">
				<HeaderTemplate>
					<span class="title">Sales By Region</span>
				</HeaderTemplate>
				<ContentTemplate>
					<Superstore.Components.Charts.SuperstorePie PieChart="@Dashboard.PieChartSalesByRegion"></Superstore.Components.Charts.SuperstorePie>

				</ContentTemplate>
			</DashboardLayoutPanel>

			<DashboardLayoutPanel Column="4" Row="1" SizeX="4" SizeY="3">
				<HeaderTemplate>
					<span class="title">Sales By Category</span>
				</HeaderTemplate>
				<ContentTemplate>
					<Superstore.Components.Charts.SuperstorePie PieChart="@Dashboard.PieChartSalesByCategory"></Superstore.Components.Charts.SuperstorePie>

				</ContentTemplate>
			</DashboardLayoutPanel>


			<DashboardLayoutPanel Column="0" Row="2" SizeX="12" SizeY="3">
				<HeaderTemplate>
					<span class="title">Total Sales By Season, Region, and Category</span>
				</HeaderTemplate>
				<ContentTemplate>
					<Superstore.Components.Charts.SuperstoreLine LineChart="@Dashboard.LineChartSalesByCategoryRegionSeason"></Superstore.Components.Charts.SuperstoreLine>

				</ContentTemplate>
			</DashboardLayoutPanel>
		</DashboardLayoutPanels>
	</SfDashboardLayout>
</div>

@code{
	SfToast ToastObj;
	private string[] catfilters;
	private string[] regfilters;
	private string[] seasonfilters;
	Dashboard Dashboard = new();
	SfDashboardLayout dashboardObject;
	private Theme Theme { get; set; }
	private double[] Spacing = new double[] { 15, 15 };
	private double Ratio = 160 / 100;
	private string ToastContent = String.Empty;


	protected override void OnInitialized()
	{

		Dashboard = DashboardService.GetDashboardViewModel(Dashboard.Filters);
		catfilters = Dashboard.Filters.CategoriesFilter;
		regfilters = Dashboard.Filters.RegionsFilter;
		seasonfilters = Dashboard.Filters.SeasonsFilter;
	}

	private async Task FilterData()
	{
		List<string> filterErrors = new List<string>();
		if(Dashboard.Filters.SeasonsFilter == null || Dashboard.Filters.SeasonsFilter.Length == 0)
			filterErrors.Add("Season filter must have at least one season");
		if (Dashboard.Filters.CategoriesFilter == null || Dashboard.Filters.CategoriesFilter.Length == 0)
			filterErrors.Add("Category filter must have at least one category");
		if (Dashboard.Filters.RegionsFilter == null || Dashboard.Filters.SeasonsFilter.Length == 0)
			filterErrors.Add("Region filter must have at least one region");


		if(!filterErrors.Any())
		{
			
			Dashboard = DashboardService.GetDashboardViewModel(Dashboard.Filters);
			StateHasChanged();
		}
		else
		{
			filterErrors.Add("Filters have been reset");
			ToastContent = String.Join(". ", filterErrors);
			await Task.Delay(200);
			await ShowToast();
			ResetData();
		}
	}

	private void ResetData()
	{
		Dashboard.Filters.SeasonsFilter = seasonfilters;
		Dashboard.Filters.CategoriesFilter = catfilters;
		Dashboard.Filters.RegionsFilter = regfilters;
		Dashboard = DashboardService.GetDashboardViewModel(Dashboard.Filters);
		StateHasChanged();
	}

	private async Task ShowToast()
	{
	
		await this.ToastObj.ShowAsync();
	}


}





